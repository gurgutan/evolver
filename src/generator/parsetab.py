
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'scriptleftPLUSleftRARROWleftPERCENTrightPOWERCOMMA COMMENT ELU EQUALS ID LCBRACE LEAKY_RELU LINEAR LOG_SOFTMAX LPAREN NUMBER PERCENT PLUS POWER RARROW RCBRACE RELU RPAREN SELU SEMICOLON SHAPE SIGMOID SOFTMAX SOFTPLUS STAR TANHscript : assigments\n        assigments : COMMENT\n                   | assigment\n                   | assigments assigment\n        assigment : ID EQUALS expression SEMICOLON\n        expression : expression PLUS expression\n                   | expression RARROW expression\n                   | expression POWER NUMBER\n                   | expression PERCENT NUMBER\n\n        expression : LCBRACE expression RCBRACEexpression : SHAPEexpression : IDparams : LPAREN param_list RPARENparams : LPAREN RPAREN\n        param_list : NUMBER\n                   | param_list COMMA NUMBER\n        \n        expression : RELU\n                   | SIGMOID\n                   | TANH\n                   | SOFTMAX\n                   | LEAKY_RELU\n                   | ELU\n                   | SELU\n                   | SOFTPLUS\n                   | LOG_SOFTMAX\n        expression : LINEAR params'
    
_lr_action_items = {'COMMENT':([0,],[3,]),'ID':([0,2,3,4,6,7,10,22,23,24,],[5,5,-2,-3,-4,8,8,-5,8,8,]),'$end':([1,2,3,4,6,22,],[0,-1,-2,-3,-4,-5,]),'EQUALS':([5,],[7,]),'LCBRACE':([7,10,23,24,],[10,10,10,10,]),'SHAPE':([7,10,23,24,],[11,11,11,11,]),'RELU':([7,10,23,24,],[12,12,12,12,]),'SIGMOID':([7,10,23,24,],[13,13,13,13,]),'TANH':([7,10,23,24,],[14,14,14,14,]),'SOFTMAX':([7,10,23,24,],[15,15,15,15,]),'LEAKY_RELU':([7,10,23,24,],[16,16,16,16,]),'ELU':([7,10,23,24,],[17,17,17,17,]),'SELU':([7,10,23,24,],[18,18,18,18,]),'SOFTPLUS':([7,10,23,24,],[19,19,19,19,]),'LOG_SOFTMAX':([7,10,23,24,],[20,20,20,20,]),'LINEAR':([7,10,23,24,],[21,21,21,21,]),'SEMICOLON':([8,9,11,12,13,14,15,16,17,18,19,20,28,30,31,32,33,34,36,38,],[-12,22,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-6,-7,-8,-9,-10,-14,-13,]),'PLUS':([8,9,11,12,13,14,15,16,17,18,19,20,27,28,30,31,32,33,34,36,38,],[-12,23,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,23,-26,-6,-7,-8,-9,-10,-14,-13,]),'RARROW':([8,9,11,12,13,14,15,16,17,18,19,20,27,28,30,31,32,33,34,36,38,],[-12,24,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,24,-26,24,-7,-8,-9,-10,-14,-13,]),'POWER':([8,9,11,12,13,14,15,16,17,18,19,20,27,28,30,31,32,33,34,36,38,],[-12,25,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,25,-26,25,25,-8,-9,-10,-14,-13,]),'PERCENT':([8,9,11,12,13,14,15,16,17,18,19,20,27,28,30,31,32,33,34,36,38,],[-12,26,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,26,-26,26,26,-8,-9,-10,-14,-13,]),'RCBRACE':([8,11,12,13,14,15,16,17,18,19,20,27,28,30,31,32,33,34,36,38,],[-12,-11,-17,-18,-19,-20,-21,-22,-23,-24,-25,34,-26,-6,-7,-8,-9,-10,-14,-13,]),'LPAREN':([21,],[29,]),'NUMBER':([25,26,29,39,],[32,33,37,40,]),'RPAREN':([29,35,37,40,],[36,38,-15,-16,]),'COMMA':([35,37,40,],[39,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'script':([0,],[1,]),'assigments':([0,],[2,]),'assigment':([0,2,],[4,6,]),'expression':([7,10,23,24,],[9,27,30,31,]),'params':([21,],[28,]),'param_list':([29,],[35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> assigments','script',1,'p_script','grammars.py',115),
  ('assigments -> COMMENT','assigments',1,'p_assigments','grammars.py',121),
  ('assigments -> assigment','assigments',1,'p_assigments','grammars.py',122),
  ('assigments -> assigments assigment','assigments',2,'p_assigments','grammars.py',123),
  ('assigment -> ID EQUALS expression SEMICOLON','assigment',4,'p_assigment','grammars.py',133),
  ('expression -> expression PLUS expression','expression',3,'p_expression','grammars.py',141),
  ('expression -> expression RARROW expression','expression',3,'p_expression','grammars.py',142),
  ('expression -> expression POWER NUMBER','expression',3,'p_expression','grammars.py',143),
  ('expression -> expression PERCENT NUMBER','expression',3,'p_expression','grammars.py',144),
  ('expression -> LCBRACE expression RCBRACE','expression',3,'p_expression_braces','grammars.py',157),
  ('expression -> SHAPE','expression',1,'p_expression_shape','grammars.py',161),
  ('expression -> ID','expression',1,'p_expression_id','grammars.py',171),
  ('params -> LPAREN param_list RPAREN','params',3,'p_func_params','grammars.py',180),
  ('params -> LPAREN RPAREN','params',2,'p_func_params_empty','grammars.py',184),
  ('param_list -> NUMBER','param_list',1,'p_func_param_list','grammars.py',189),
  ('param_list -> param_list COMMA NUMBER','param_list',3,'p_func_param_list','grammars.py',190),
  ('expression -> RELU','expression',1,'p_func_activator','grammars.py',199),
  ('expression -> SIGMOID','expression',1,'p_func_activator','grammars.py',200),
  ('expression -> TANH','expression',1,'p_func_activator','grammars.py',201),
  ('expression -> SOFTMAX','expression',1,'p_func_activator','grammars.py',202),
  ('expression -> LEAKY_RELU','expression',1,'p_func_activator','grammars.py',203),
  ('expression -> ELU','expression',1,'p_func_activator','grammars.py',204),
  ('expression -> SELU','expression',1,'p_func_activator','grammars.py',205),
  ('expression -> SOFTPLUS','expression',1,'p_func_activator','grammars.py',206),
  ('expression -> LOG_SOFTMAX','expression',1,'p_func_activator','grammars.py',207),
  ('expression -> LINEAR params','expression',2,'p_func_linear','grammars.py',215),
]
